In addition to responding over HTTPS, Cordra can be configured to use TLS/SSL when communicating with underlying systems.See also CordraClient TLS configuration for how to configure the Java CordraClient for server TLS authentication when connecting to Cordra.NoteTLS connections are only supported in ZooKeeper 3.5.5 or higher.Connecting to ZooKeeper using TLS requires certain system properties to be set. These properties can also be set in the WEB-INF/web.xml file using a context-param called properties (in
 Java properties format) or properties.json (in JSON format). If using Java properties format note that whitespace at the end of a line, but not beginning of a line, is significant.Example web.xml:For more details on ZooKeeper client configuration, see the ZooKeeper Administrator¡¯s Guide and the ZooKeeper SSL User Guide.Generally, the Kafka clients created by Cordra will use the same TLS configuration. This can be set using the kafkaCommonConfig property in config.json. Any configuration in this property wi
ll be applied to all internal Kafka clients, unless that setting is overridden by a specific client configuration.Sample config.json:For more details on Kafka client configuration, see the Kafka documentation.Connecting to some applications may require modifying javax.net.ssl system properties. For example, if you are using mutual TLS authentication or using self-signed certificates, with MongoDB, Solr, or Elasticsearch, you may need to set the properties javax.net.ssl.keyStore, javax.net.ssl.keyStorePasswo
rd, javax.net.ssl.trustStore, and javax.net.ssl.trustStorePassword.Cordra supports configuring system properties using the properties property in config.json. Example config.json with these TLS settings: