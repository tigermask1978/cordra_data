When writing type methods of life cycle hooks it is sometimes convenient to use Java rather than JavaScript. Perhaps you have existing code or a 3rd party library that is only available in Java or perhaps you want to start a long running background process on another thread. In such cases it is possible to add a jar file to Cordra and call code in that jar file from JavaScript.Any jar files you wish to call should be placed into a directory called lib in your Cordra data directory. If the lib directory does
n¡¯t exist, create the lib directory in the Cordra data directory.Consider the following simple Java class:To create an instance of a Point and call its toString method from a type method in JavaScript you would do the following:More details on how to interact with Java objects from Cordra JavaScript can be found here https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/api.htmlIf you find yourself with a need to execute a long running Java background process you may want to listen for a 
shutdown event when Cordra shuts down to cleanly terminate your code. Support for this is provided by the class CordraHooksSupport. The below show example code that uses CordraHooksSupport to listen to the Cordra shutdown event. It also uses CordraHooksSupport to get an instance of a CordraClient that talks directly to the local Cordra instance.And then from a JavaScript instance method you could start the above Java background process: